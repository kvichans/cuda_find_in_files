[
    {   "cmt": ["Option allows to save separate search settings (search text,",
                "source folder, files mask etc) per each mentioned session/project.",
                "Each item in the option is RegEx, which is compared with the",
                "full path of session (project). First matched item is used."],
        "def": [],
        "frm": "json",
        "opt": "fif_sep_hist_for_sess_proj",
        "chp": "History",
        "tgs": []
    },

    {   "cmt": "Copy options [.*], [aA], [\"w\"] from CudaText dialog to plugin's dialog.",
        "def": false,
        "frm": "bool",
        "opt": "fif_use_edfind_opt_on_start",
        "chp": "Start",
        "tgs": ["start", "settings"]
    },
    {   "cmt": "Use selection text from current file when dialog opens.",
        "def": false,
        "frm": "bool",
        "opt": "fif_use_selection_on_start",
        "chp": "Start",
        "tgs": ["start"]
    },

    {   "cmt": ["List of lexer names to use for report file.",
                "First available lexer is used."],
        "def": [
            "Search results",
            "FiF"
        ],
        "frm": "json",
        "opt": "fif_lexers",
        "chp": "Report",
        "tgs": ["lexer", "report"]
    },
    {   "cmt": ["Auto-write 'tab_size' to report's lexer-specific config,",
               "if no such setting. Use 0 to skip."],
        "def": 2,
        "frm": "int",
        "opt": "fif_lexer_auto_tab_size",
        "chp": "Report",
        "tgs": ["lexer", "report"]
    },
    {   "cmt": ["Allows Esc key to stop all stages of current search.",
                "If false, Esc stops only the current stage."],
        "def": false,
        "frm": "bool",
        "opt": "fif_esc_full_stop",
        "chp": "Searching",
        "tgs": ["searching", "stop"]
    },

    {   "cmt": "Show report even if nothing found.",
        "def": false,
        "frm": "bool",
        "opt": "fif_report_no_matches",
        "chp": "Report",
        "tgs": ["report", "comfort"]
    },
    {   "cmt": "[x]Append: Need to fold previous results.",
        "def": false,
        "frm": "bool",
        "opt": "fif_fold_prev_res",
        "chp": "Report",
        "tgs": ["report", "append", "comfort"]
    },
    {   "cmt": "Close dialog if search has found matches.",
        "def": false,
        "frm": "bool",
        "opt": "fif_hide_if_success",
        "chp": "",
        "tgs": ["comfort"]
    },
    {   "cmt": "Length of substring (from field \"Find\"), which appears in the report document title.",
        "def": 10,
        "frm": "int",
        "opt": "fif_len_target_in_title",
        "chp": "Report",
        "tgs": ["report", "comfort"]
    },
    {   "cmt": "If report document has a filename, save report after filling it.",
        "def": false,
        "frm": "bool",
        "opt": "fif_auto_save_if_file",
        "chp": "Report",
        "tgs": ["report", "file"]
    },
    {   "cmt": "Activate document with report after filling it.",
        "def": true,
        "frm": "bool",
        "opt": "fif_focus_to_rpt",
        "chp": "Report",
        "tgs": ["report", "comfort"]
    },
    {   "cmt": ["Show search details (\"Find\", \"In folder\", …) in the first line of report.",
                "The info will be used in command \"Repeat search for this report-tab\"."],
        "def": false,
        "frm": "bool",
        "opt": "fif_save_request_to_rpt",
        "chp": "Report",
        "tgs": ["report", "comfort"]
    },

    {   "cmt": ["Append specified string to the field 'Not in files'."],
        "def": "/.svn /.git /.hg /.idea",
        "frm": "str",
        "opt": "fif_always_not_in_files",
        "chp": "Searching",
        "tgs": ["searching"]
    },
    {   "cmt": "Size of buffer (at file start) to detect binary files.",
        "def": 1024,
        "frm": "int",
        "opt": "fif_read_head_size(bytes)",
        "chp": "Searching",
        "tgs": ["searching", "internal"]
    },
    {   "cmt": "If value>0, skip all files, which sizes are bigger than this value (in Kb).",
        "def": 0,
        "frm": "int",
        "opt": "fif_skip_file_size_more_Kb",
        "chp": "Searching",
        "tgs": ["searching", "scope"]
    },
    {   "cmt": ["Default encoding to read files.",
                "If value is empty, then the following is used:",
                "  cp1252 for Linux,",
                "  preferred encoding from locale for others (Win, macOS, …)."],
        "def": "",
        "frm": "str",
        "opt": "fif_locale_encoding",
        "chp": "Searching",
        "tgs": ["searching", "internal", "encoding"]
    },

    {   "cmt": ["Style to mark found fragment in report.",
                "Full form:",
                "   \"fif_mark_style\":{",
                "     \"color_back\":\"\", ",
                "     \"color_font\":\"\",",
                "     \"font_bold\":false, ",
                "     \"font_italic\":false,",
                "     \"color_border\":\"\", ",
                "     \"borders\":{\"left\":\"\",\"right\":\"\",\"bottom\":\"\",\"top\":\"\"}",
                "   },",
                "Color values: \"\" - skip, \"#RRGGBB\" - hex-digits",
                "Values for border sides: \"solid\", \"dash\", \"2px\", \"dotted\", \"rounded\", \"wave\""],
        "def": {"borders": {"bottom": "dotted"}},
        "frm": "json",
        "opt": "fif_mark_style",
        "chp": "Report",
        "tgs": ["report", "mark"]
    },
    {   "cmt": ["Style to mark replaced fragment in report (unique in line).",
                "Full form:",
                "   \"fif_mark_style\":{",
                "     \"color_back\":\"\", ",
                "     \"color_font\":\"\",",
                "     \"font_bold\":false, ",
                "     \"font_italic\":false,",
                "     \"color_border\":\"\", ",
                "     \"borders\":{\"left\":\"\",\"right\":\"\",\"bottom\":\"\",\"top\":\"\"}",
                "   },",
                "Color values: \"\" - skip, \"#RRGGBB\" - hex-digits",
                "Values for border sides: \"solid\", \"dash\", \"2px\", \"dotted\", \"rounded\", \"wave\""],
        "def": {"borders": {"bottom": "solid"}},
        "frm": "json",
        "opt": "fif_mark_true_replace_style",
        "chp": "Report",
        "tgs": ["report", "mark"]
    },
    {   "cmt": ["Style to mark replaced fragment in report (not unique in line).",
                "Full form:",
                "   \"fif_mark_style\":{",
                "     \"color_back\":\"\", ",
                "     \"color_font\":\"\",",
                "     \"font_bold\":false, ",
                "     \"font_italic\":false,",
                "     \"color_border\":\"\", ",
                "     \"borders\":{\"left\":\"\",\"right\":\"\",\"bottom\":\"\",\"top\":\"\"}",
                "   },",
                "Color values: \"\" - skip, \"#RRGGBB\" - hex-digits",
                "Values for border sides: \"solid\", \"dash\", \"2px\", \"dotted\", \"rounded\", \"wave\""],
        "def": {"borders": {"bottom":"wave"},"color_border":"#777"},
        "frm": "json",
        "opt": "fif_mark_false_replace_style",
        "chp": "Report",
        "tgs": ["report", "mark"]
    },

    {   "cmt": "Allows logging for all search stages.",
        "def": false,
        "frm": "bool",
        "opt": "fif_LOG",
        "chp": "Logging",
        "tgs": ["log", "internal"]
    },
    {   "cmt": "Allows logging for searching stage.",
        "def": false,
        "frm": "bool",
        "opt": "fif_FNDLOG",
        "chp": "Logging",
        "tgs": ["log", "internal"]
    },
    {   "cmt": "Allows logging for reporting stage.",
        "def": false,
        "frm": "bool",
        "opt": "fif_RPTLOG",
        "chp": "Logging",
        "tgs": ["log", "internal"]
    },
    {   "cmt": "Allows logging for navigation stage.",
        "def": false,
        "frm": "bool",
        "opt": "fif_NAVLOG",
        "chp": "Logging",
        "tgs": ["log", "internal"]
    },
    {   "cmt": "Append internal debug data to report.",
        "def": false,
        "frm": "bool",
        "opt": "fif_DBG_data_to_report",
        "chp": "Logging",
        "tgs": ["log", "internal"]
    },
    {   "cmt": "Specifies filename of log file.",
        "def": "",
        "frm": "file",
        "opt": "fif_log_file",
        "chp": "Logging",
        "tgs": ["log", "internal"]
    },
    {   "cmt": "Allows logging about failed file reads (encoding errors).",
        "def": false,
        "frm": "bool",
        "opt": "fif_log_encoding_fail",
        "chp": "Logging",
        "tgs": ["log", "internal", "encoding"]
    }
]
